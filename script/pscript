#!/bin/bash

if [[ $1 = "-h" || $1 = "--help" ]]
then
  echo -e """usage: pscript [-h] [-v] [-u] [-i] [--no-output OPTION] 
                                   [-e FILE] [-d FILE]
                                   
optional arguments:
  -h, --help            show this help message and exit
  -v, --version         Display ProtonScript version.
  -u, --update          Update the ProtonScript.
  -i, --ide             Open the ProtonScript IDE.
  
ProtonScript Coder:
  --no--output OPTION   
                        Disable ProtonScript Coder output.
  -e FILE, --encode FILE
                        Encode a ProtonScript program file.
  -d FILE, --decode FILE 
                        Decode a ProtonScript program file."""
                        
fi

#blue start 
	BS="-e \033[1;34m"
#color end
	CE="\033[0m"
#red start
	RS="\033[31m"
#green start
	GNS="-e \033[1;32m"
#white start
  WHS="\033[0;97m"

if [[ "$1" = "-u" || "$1" = "--update" ]]
then
{
rm /bin/pscript
rm /usr/local/bin/pscript
rm /data/data/com.termux/files/usr/bin/pscript
} &> /dev/null
if [[ -f ~/proton/script/pscript ]]
then
sleep 1
echo -e "\n(1/1) Updating ProtonScript ..... [ OK ]"
else
sleep 1
echo -e "\n(1/1) Updating ProtonScript ..... [ FAIL ]\n"
exit
fi
sleep 5
{
cp ~/proton/script/pscript /bin
cp ~/proton/script/pscript /usr/local/bin
cp ~/proton/script/pscript /data/data/com.termux/files/usr/bin
chmod +x /bin/pscript
chmod +x /usr/local/bin/pscript
chmod +x /data/data/com.termux/files/usr/bin/pscript
} &> /dev/null
echo -e ""
exit
fi

if [[ $1 = "-v" || $1 = "--version" ]]
then
echo -e "ProtonScript v3.0 stable"
exit
fi

if [[ $1 = "--no-output" ]]
then
if [[ $2 = "-e" || $1 = "--encode" ]]
then
if [[ $3 = "" ]]
then
echo -e "usage: pscript [-h] [-v] [-u] [-i] [--no-output OPTION]"
echo -e "                                   [-e FILE] [-d FILE]"
echo -e "pscript: error: argument -e/--encode: expected one argument"
exit
fi
{
  python3 ~/proton/script/coder/coder.py -e $3
  } &> /dev/null
  exit
fi

if [[ $2 = "-d" || $1 = "--decode" ]]
then
if [[ $3 = "" ]]
then
echo -e "usage: pscript [-h] [-v] [-u] [-i] [--no-output OPTION]"
echo -e "                                   [-e FILE] [-d FILE]"
echo -e "pscript: error: argument -d/--decode: expected one argument"
exit
fi
{
  python3 ~/proton/script/coder/coder.py -d $3
  } &> /dev/null
  exit
fi

elif [[ $1 = "-e" || $1 = "--encode" ]]
then
if [[ $2 = "" ]]
then
echo -e "usage: pscript [-h] [-v] [-u] [-i] [--no-output OPTION]"
echo -e "                                   [-e FILE] [-d FILE]"
echo -e "pscript: error: argument -e/--encode: expected one argument"
exit
fi
  python3 ~/proton/script/coder/coder.py -e $2
  exit

elif [[ $1 = "-d" || $1 = "--decode" ]]
then
if [[ $2 = "" ]]
then
echo -e "usage: pscript [-h] [-v] [-u] [-i] [--no-output OPTION]"
echo -e "                                   [-e FILE] [-d FILE]"
echo -e "pscript: error: argument -d/--decode: expected one argument"
exit
fi
  python3 ~/proton/script/coder/coder.py -d $2
  exit
  
elif [[ $1 = "-i" || $1 = "--ide" ]] 
then
cd ~/proton/script/ide
python pside.py
fi

if [[ $1 != "" ]]
then
echo -e "usage: pscript [-h] [-v] [-u] [-i] [--no-output OPTION]"
echo -e "                                   [-e FILE] [-d FILE]"
echo -e "pscript: error: unrecognized arguments: "$1""
else
  echo -e """usage: pscript [-h] [-v] [-u] [-i] [--no-output OPTION] 
                                                [-e FILE] [-d FILE]

optional arguments:
  -h, --help            show this help message and exit
  -v, --version         Display ProtonScript version.
  -u, --update          Update the ProtonScript.
  -i, --ide             Open the ProtonScript IDE.

ProtonScript Coder:
  --no--output OPTION   
                        Disable ProtonScript Coder output.
  -e FILE, --encode FILE
                        Encode a ProtonScript program file.
  -d FILE, --decode FILE 
                        Decode a ProtonScript program file."""
fi
