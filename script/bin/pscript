#!/bin/bash

if [[ $1 = "-h" || $1 = "--help" ]]
then
  echo -e """usage: pscript [-h] [-v] [-i] [--no-output OPTION] 
                              [-e FILE] [-d FILE]
optional arguments:
  -h, --help            show this help message and exit
  -v, --version         Display ProtonScript version.
  -u, --update          Update the ProtonScript.
  -i, --ide             Open the ProtonScript IDE.
  
ProtonScript Coder:
  --no--output OPTION   
                        Disable ProtonScript Coder output.
  -e FILE, --encode FILE
                        Encode a ProtonScript program file.
  -d FILE, --decode FILE 
                        Decode a ProtonScript program file."""
                        
fi

if [[ $1 = "-v" || $1 = "--version" ]]
then
echo -e "ProtonScript v3.0 stable"
exit
fi

if [[ $1 = "--no-output" ]]
then
if [[ $2 = "-e" || $1 = "--encode" ]]
then
if [[ $3 = "" ]]
then
echo -e "usage: pscript [-h] [-v] [-i] [--no-output OPTION]"
echo -e "                              [-e FILE] [-d FILE]"
echo -e "pscript: error: argument -e/--encode: expected one argument"
exit
fi
{
  python3 ~/proton/script/coder/coder.py -e $3
  } &> /dev/null
  exit
fi

if [[ $2 = "-d" || $1 = "--decode" ]]
then
if [[ $3 = "" ]]
then
echo -e "usage: pscript [-h] [-v] [-i] [--no-output OPTION]"
echo -e "                              [-e FILE] [-d FILE]"
echo -e "pscript: error: argument -d/--decode: expected one argument"
exit
fi
{
  python3 ~/proton/script/coder/coder.py -d $3
  } &> /dev/null
  exit
fi

elif [[ $1 = "-e" || $1 = "--encode" ]]
then
if [[ $2 = "" ]]
then
echo -e "usage: pscript [-h] [-v] [-i] [--no-output OPTION]"
echo -e "                              [-e FILE] [-d FILE]"
echo -e "pscript: error: argument -e/--encode: expected one argument"
exit
fi
  python3 ~/proton/script/coder/coder.py -e $2
  exit

elif [[ $1 = "-d" || $1 = "--decode" ]]
then
if [[ $2 = "" ]]
then
echo -e "usage: pscript [-h] [-v] [-i] [--no-output OPTION]"
echo -e "                              [-e FILE] [-d FILE]"
echo -e "pscript: error: argument -d/--decode: expected one argument"
exit
fi
  python3 ~/proton/script/coder/coder.py -d $2
  exit
  
elif [[ $1 = "-i" || $1 = "--ide" ]] 
then
cd ~/proton/script/ide
python pside.py
fi

if [[ $1 != "" ]]
then
echo -e "usage: pscript [-h] [-v] [-i] [--no-output OPTION]"
echo -e "                              [-e FILE] [-d FILE]"
echo -e "pscript: error: unrecognized arguments: "$1""
else
  echo -e """usage: pscript [-h] [-v] [-i] [--no-output OPTION] 
                              [-e FILE] [-d FILE]
optional arguments:
  -h, --help            show this help message and exit
  -v, --version         Display ProtonScript version.
  -i, --ide             Open the ProtonScript IDE.
ProtonScript Coder:
  --no--output OPTION   
                        Disable ProtonScript Coder output.
  -e FILE, --encode FILE
                        Encode a ProtonScript program file.
  -d FILE, --decode FILE 
                        Decode a ProtonScript program file."""
fi
